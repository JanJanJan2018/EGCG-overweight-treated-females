hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='!',
na.strings=c('',' '), header=TRUE)
setwd("C:/Users/m/Downloads")
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='!',
na.strings=c('',' '), header=TRUE)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='!',
na.strings=c('',' '), header=TRUE, nrows=10000)
View(hemo)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='#',
na.strings=c('',' '), header=TRUE, nrows=10000)
View(hemo)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='!',
na.strings=c('',' '), header=TRUE, skip=8087, nrows=10000)
View(hemo)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='!',
na.strings=c('',' '), header=TRUE, nrows=10000)
View(hemo)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='!',
na.strings=c('',' '), skip=9, header=TRUE, nrows=10000)
View(hemo)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='!',
na.strings=c('',' '), skip=9, header=FALSE, nrows=10000)
View(hemo)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char=c('!','#'),
na.strings=c('',' '), skip=9, header=FALSE, nrows=10000)
View(hemo)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char=#,
na.strings=c('',' '), skip=8087, header=FALSE, nrows=10000)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='#',
na.strings=c('',' '), skip=8087, header=FALSE, nrows=10000)
View(hemo)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='#',
na.strings=c('',' '), skip=8088, header=FALSE, nrows=10000)
View(hemo)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='#',
na.strings=c('',' '), skip=8090, header=FALSE, nrows=10000)
View(hemo)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='!',
na.strings=c('',' '), skip=10, header=FALSE, nrows=10000)
View(hemo)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='!',
na.strings=c('',' '), skip=10, header=TRUE, nrows=10000)
View(hemo)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='#',
na.strings=c('',' '), skip=10, header=TRUE, nrows=10000)
View(hemo)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='#',
na.strings=c('',' '), skip=8090, header=TRUE, nrows=10000)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='#',
na.strings=c('',' '), skip=8090, header=FALSE, nrows=10000)
View(hemo)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='#',
na.strings=c('',' '), skip=8090, header=2, nrows=10000)
View(hemo)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='#',
na.strings=c('',' '), skip=8090, header=FALSE, nrows=500000)
View(hemo)
setwd("C:/Users/m/Desktop/iron")
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='#',
na.strings=c('',' '), skip=8087, header=FALSE, nrows=60000)
iron <- read.csv('hemochromatosPatientsGeneExpressionValues.csv', sep=',',
header=TRUE, na.strings=c('',' '))
setwd("C:/Users/m/Desktop/iron")
iron <- read.csv('hemotochromatosPatientsGeneExpressionValues.csv', sep=',',
header=TRUE, na.strings=c('',' '))
iron <- read.csv('hemotochromatosisPatientsGeneExpressionValues.csv', sep=',',
header=TRUE, na.strings=c('',' '))
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='#',
na.strings=c('',' '), skip=8087, header=FALSE, nrows=53620)
View(hemo)
hemo <- read.delim('GPL16686_family.soft', sep='\t', comment.char='#',
na.strings=c('',' '), skip=8087, header=FALSE, nrows=53621)
View(hemo)
Hemo <- hemo[2:53621, 1,6]
Hemo <- as.data.frame(hemo[2:53621, 1,6])
View(Hemo)
Hemo <- hemo[2:53621, c(1,6)]
View(Hemo)
colnames(Hemo) <- Hemo[2,]
colnames(Hemo) <- as.character(Hemo[2,])
colnames(Hemo) <- c('ID','GB_ACC')
Hemo <- Hemo[-2,]
Hemo <- Hemo[3:53619,]
Hemo1 <- Hemo[na.omit(Hemo$GB_ACC),]
View(Hemo1)
View(Hemo)
Hemo1 <- Hemo[complete.cases(Hemo$GB_ACC),]
row.names(Hemo1) <- NULL
View(iron)
iron2 <- iron[3:53620,]
View(iron2)
colnames(iron2) <- iron2[1,]
colnames(iron2) <- as.character(iron2[1,])
iron2[1,]
class(iron2[1,])
colnames(iron2) <- colnames(iron2[1,])
colnames(iron2[1,])
row.names(iron2[1,])
values(iron2[1,])
as.character(iron2[1,])
iron2[1,]
iron2[1,1]
colnames(iron2) <- NULL
names <- (as.character(iron[1,]))
colnames(iron2) <- as.character.factor(iron2[1,])
iron <- read.csv('hemotochromatosisPatientsGeneExpressionValues.csv', sep=',',
header=TRUE, na.strings=c('',' '), skip=3)
View(iron)
ironMeta <- read.csv('hemotochromatosisPatientsGeneExpressionValues.csv', sep=',',
header=TRUE, na.strings=c('',' '), nrows=3)
View(ironMeta)
ironMeta <- read.csv('hemotochromatosisPatientsGeneExpressionValues.csv', sep=',',
header=FALSE, na.strings=c('',' '), nrows=3)
ironMeta <- read.csv('hemotochromatosisPatientsGeneExpressionValues.csv', sep=',',
header=FALSE, na.strings=c('',' '), nrows=4)
View(ironMeta)
View(Hemo)
View(Hemo1)
rm(iron2)
rm(names)
View(iron)
combined <- merge(Hemo1, iron, by.x='ID', by.y='ID_REF')
View(combined)
bioMart <- read.delim('mart_export.txt', sep='\t', header=TRUE,
na.strings=c('',' '))
View(bioMart)
View(iron)
bio <- bioMart[,c(2:4)]
View(bio)
Bio <- bio[complete.cases(bio$HGNC.symbol),]
View(Bio)
colnames(Bio)
Blend <- merge(iron, Bio, by.x='ID_ReF', by.y='AFFY.HuGene.2.0.st.v1.probe')
Blend <- merge(iron, Bio, by.x='ID_REF', by.y='AFFY.HuGene.2.0.st.v1.probe')
View(Blend)
Bio <- Bio[!duplicated(Bio),]
Blend <- merge(iron, Bio, by.x='ID_REF', by.y='AFFY.HuGene.2.0.st.v1.probe')
View(Blend)
Blend1 <- Blend[,c(26,27,2:25)]
View(Blend1)
Blend1 <- Blend[,c(2:25)]
Blend-meta <- Blend[,26:27]
View(Blend1)
Blend1 <- Blend[,c(2:26)]
Blend-meta <- Blend[,26:27]
Blend1 <- Blend[,c(2:25,27)]
library(dplyr)
samples <- colnames(Blend1[1:24])
samples <- as.vector(samples)
geneMeans <- Blend1 %>% group_by(HGNC.symbol) %>% summarise_at(samples, mean, na.rm = TRUE)
View(geneMeans)
View(ironMeta)
colnames(geneMeans)
healthyMales <- geneMeans[,c(20:22,25)]
healthyFemales <- geneMeans[,c(23,24)]
hemoMales <- geneMeans[,c(2:7,9,10,12:15,19)]
hemoFemales <- geneMeans[,c(8,11,16:18)]
healthyMales <- geneMeans[,c(1,20:22,25)]
healthyFemales <- geneMeans[,c(1,23,24)]
#ignore the groups where 1 and 2 are one type of homozygous strand,
# and 3 is another or a heterozygous strand
hemoMales <- geneMeans[,c(1,2:7,9,10,12:15,19)]
hemoFemales <- geneMeans[,c(1,8,11,16:18)]
View(hemoFemales)
View(hemoMales)
View(healthyFemales)
View(healthyMales)
write.csv(geneMeans, 'hemochromatosis-cleaned.csv', row.names=FALSE)
1689134/8
211142+211142
+211142
+211142
mart1 <-bioMart[1:211142,]
write.csv(mart1,'mart1.csv', row.names=FALSE)
422284+211142
a=211142
mart2 <-bioMart[211143:422284,]
mart3 <-bioMart[422285:633426,]
633427+1
633427+a1
633427+a
844570+a
1055713+a
1266856+a
1477998+a
mart1 <-bioMart[1:211142,]
mart2 <-bioMart[211143:422284,]
mart3 <-bioMart[422285:633426,]
mart4 <-bioMart[633427:844569,]
mart5 <-bioMart[844570:1055712,]
mart6 <-bioMart[1055713:1266855,]
mart7 <-bioMart[1266856:1477998,]
mart8 <-bioMart[1477999:1689134,]
write.csv(mart1, 'mart1.csv')
write.csv(mart2, 'mart2.csv')
write.csv(mart3, 'mart3.csv')
write.csv(mart4, 'mart4.csv')
write.csv(mart5, 'mart5.csv')
write.csv(mart6, 'mart6.csv')
write.csv(mart7, 'mart7.csv')
write.csv(mart8, 'mart8.csv')
mar1 <- read.csv('mart1.csv', sep=',', header=TRUE, na.strings=c('',' '))
View(mar1)
write.csv(mart1, 'mart1.csv', row.names=FALSE)
write.csv(mart2, 'mart2.csv', row.names=FALSE)
write.csv(mart3, 'mart3.csv', row.names=FALSE)
write.csv(mart4, 'mart4.csv', row.names=FALSE)
write.csv(mart5, 'mart5.csv', row.names=FALSE)
write.csv(mart6, 'mart6.csv', row.names=FALSE)
write.csv(mart7, 'mart7.csv', row.names=FALSE)
write.csv(mart8, 'mart8.csv', row.names=FALSE)
mart1 <- read.csv('mart1.csv', sep=',', header=TRUE, na.strings=c('',' '))
View(mart1)
View(mart1)
BioMart <- rbind(mart1, mart2, mart3, mart4, mart5, mart6, mart7, mart8)
View(bioMart)
View(BioMart)
bio <- BioMart[,c(2:4)]
Bio <- bio[complete.cases(bio$HGNC.symbol),]
Bio <- Bio[!duplicated(Bio),]
Blend <- merge(iron, Bio, by.x='ID_REF', by.y='AFFY.HuGene.2.0.st.v1.probe')
Blend1 <- Blend[,c(2:25,27)]
Blend-meta <- Blend[,26:27]
library(dplyr)
samples <- colnames(Blend1[1:24])
samples <- as.vector(samples)
geneMeans <- Blend1 %>% group_by(HGNC.symbol) %>% summarise_at(samples, mean, na.rm = TRUE)
View(geneMeans)
healthyMales <- geneMeans[,c(1,20:22,25)]
healthyFemales <- geneMeans[,c(1,23,24)]
hemoMales <- geneMeans[,c(1,2:7,9,10,12:15,19)]
hemoFemales <- geneMeans[,c(1,8,11,16:18)]
write.csv(geneMeans, 'hemochromatosis-cleaned.csv', row.names=FALSE)
write.csv(healthyMales, 'hemoHealthyMales.csv', row.names=FALSE)
write.csv(healthyFemales, 'hemoHealthyFemales.csv', row.names=FALSE)
write.csv(hemoMales, 'hemoMales.csv', row.names=FALSE)
write.csv(hemoFemales, 'hemoFemales.csv', row.names=FALSE)
View(Bio)
bio <- BioMart[,c(2:4)]
Bio <- bio[complete.cases(bio$HGNC.symbol),]
Bio <- Bio[!duplicated(Bio),]
Blend <- merge(iron, Bio, by.x='ID_REF', by.y='AFFY.HuGene.2.0.st.v1.probe')
# There are still duplicate HGNC names because of the probe ID identifying the gene
# where it is a pseudo gene
Blend1 <- Blend[,c(2:25,27)]
Blend_meta <- Blend[,26:27]
